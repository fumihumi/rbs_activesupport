module RbsActivesupportDelegate
  class DeclarationBuilder
    type t = AttributeAccessor | ClassAttribute | Delegate | Include

    include AST

    attr_reader method_searcher: MethodSearcher

    def initialize: (MethodSearcher method_searcher) -> void
    def build: (RBS::Namespace namespace, Array[Parser::MethodCall] method_calls) -> [Array[String], Array[String]]

    private

    def build_method_calls: (RBS::Namespace namespace, Array[Parser::MethodCall] method_calls) -> Array[t]
    def build_attribute_accessor: (Parser::MethodCall method_call) -> Array[AttributeAccessor]
    def build_class_attribute: (Parser::MethodCall method_calls) -> Array[ClassAttribute]
    def build_delegate: (RBS::Namespace namespace, Parser::MethodCall method_calls) -> Array[Delegate]
    def build_include: (RBS::Namespace namespace, Parser::MethodCall method_calls) -> Array[Include]
    def render: (t decl) -> String?
    def render_attribute_accessor: (AttributeAccessor decl) -> String
    def render_class_attribute: (ClassAttribute decl) -> String
    def render_delegate: (Delegate decl) -> String
    def render_include: (Include decl) -> String?
  end
end
