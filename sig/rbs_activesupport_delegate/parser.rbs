module RbsActivesupportDelegate
  class Parser < ::RBS::Prototype::RB
    class MethodCall
      attr_reader name: t
      attr_reader args: Array[RubyVM::AbstractSyntaxTree::Node]

      @private: bool

      def initialize: (t name, Array[RubyVM::AbstractSyntaxTree::Node] args, bool private) -> void
      def private?: () -> bool
    end

    type t = :delegate
    METHODS: Array[t]

    alias process_orig process

    attr_reader method_calls: Hash[RBS::Namespace, Array[MethodCall]]

    def private?: (Array[RBS::AST::Declarations::t | RBS::AST::Members::t] decls) -> bool
  end
end
